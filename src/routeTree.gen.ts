/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AppTrendingImport } from './routes/_app/trending'
import { Route as AppPopularImport } from './routes/_app/popular'
import { Route as AppUserUserIdImport } from './routes/_app/user/$userId'
import { Route as AppBlogBlogIdImport } from './routes/_app/blog/$blogId'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AppTrendingRoute = AppTrendingImport.update({
  id: '/trending',
  path: '/trending',
  getParentRoute: () => AppRoute,
} as any)

const AppPopularRoute = AppPopularImport.update({
  id: '/popular',
  path: '/popular',
  getParentRoute: () => AppRoute,
} as any)

const AppUserUserIdRoute = AppUserUserIdImport.update({
  id: '/user/$userId',
  path: '/user/$userId',
  getParentRoute: () => AppRoute,
} as any)

const AppBlogBlogIdRoute = AppBlogBlogIdImport.update({
  id: '/blog/$blogId',
  path: '/blog/$blogId',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/popular': {
      id: '/_app/popular'
      path: '/popular'
      fullPath: '/popular'
      preLoaderRoute: typeof AppPopularImport
      parentRoute: typeof AppImport
    }
    '/_app/trending': {
      id: '/_app/trending'
      path: '/trending'
      fullPath: '/trending'
      preLoaderRoute: typeof AppTrendingImport
      parentRoute: typeof AppImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/blog/$blogId': {
      id: '/_app/blog/$blogId'
      path: '/blog/$blogId'
      fullPath: '/blog/$blogId'
      preLoaderRoute: typeof AppBlogBlogIdImport
      parentRoute: typeof AppImport
    }
    '/_app/user/$userId': {
      id: '/_app/user/$userId'
      path: '/user/$userId'
      fullPath: '/user/$userId'
      preLoaderRoute: typeof AppUserUserIdImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppPopularRoute: typeof AppPopularRoute
  AppTrendingRoute: typeof AppTrendingRoute
  AppIndexRoute: typeof AppIndexRoute
  AppBlogBlogIdRoute: typeof AppBlogBlogIdRoute
  AppUserUserIdRoute: typeof AppUserUserIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppPopularRoute: AppPopularRoute,
  AppTrendingRoute: AppTrendingRoute,
  AppIndexRoute: AppIndexRoute,
  AppBlogBlogIdRoute: AppBlogBlogIdRoute,
  AppUserUserIdRoute: AppUserUserIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/popular': typeof AppPopularRoute
  '/trending': typeof AppTrendingRoute
  '/login': typeof AuthLoginRoute
  '/': typeof AppIndexRoute
  '/blog/$blogId': typeof AppBlogBlogIdRoute
  '/user/$userId': typeof AppUserUserIdRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/popular': typeof AppPopularRoute
  '/trending': typeof AppTrendingRoute
  '/login': typeof AuthLoginRoute
  '/': typeof AppIndexRoute
  '/blog/$blogId': typeof AppBlogBlogIdRoute
  '/user/$userId': typeof AppUserUserIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/popular': typeof AppPopularRoute
  '/_app/trending': typeof AppTrendingRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_app/': typeof AppIndexRoute
  '/_app/blog/$blogId': typeof AppBlogBlogIdRoute
  '/_app/user/$userId': typeof AppUserUserIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/popular'
    | '/trending'
    | '/login'
    | '/'
    | '/blog/$blogId'
    | '/user/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/popular'
    | '/trending'
    | '/login'
    | '/'
    | '/blog/$blogId'
    | '/user/$userId'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_app/popular'
    | '/_app/trending'
    | '/_auth/login'
    | '/_app/'
    | '/_app/blog/$blogId'
    | '/_app/user/$userId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/popular",
        "/_app/trending",
        "/_app/",
        "/_app/blog/$blogId",
        "/_app/user/$userId"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login"
      ]
    },
    "/_app/popular": {
      "filePath": "_app/popular.tsx",
      "parent": "/_app"
    },
    "/_app/trending": {
      "filePath": "_app/trending.tsx",
      "parent": "/_app"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/blog/$blogId": {
      "filePath": "_app/blog/$blogId.tsx",
      "parent": "/_app"
    },
    "/_app/user/$userId": {
      "filePath": "_app/user/$userId.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
